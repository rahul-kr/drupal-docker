version: "2.1"

services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    env_file: ./conf/.env
    volumes:
      - ./db-data:/var/lib/mysql
    networks:
      - internal

  drupal:
    image: drupal
    build: ./conf
    container_name: drupal
    depends_on:
      - mysql
    restart: unless-stopped
    networks:
      - internal
      - external
    volumes:
      - .:/var/www
    links:
      - 'sonarqube'

  nginxWebserver:
    image: nginx:1.17.4-alpine
    container_name: nginxWebserver
    depends_on:
      - drupal
    restart: unless-stopped
    ports:
      - 8092:80
    volumes:
      - .:/var/www
      - ./conf/nginx-conf:/etc/nginx/conf.d
    networks:
      - external

  sonarqube:
    image: sonarqube
    expose:
      - 9000
    ports:
      - "9000:9000"
    networks:
      - internal
      - external
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins

  db:
    image: postgres
    networks:
      - internal
      - external
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data



networks:
  external:
    driver: bridge
  internal:
    driver: bridge

volumes:
  drupal-data:
  db-data:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_bundled-plugins:
  postgresql:
  postgresql_data:
    